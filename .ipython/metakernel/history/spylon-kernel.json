["import scala.annotation.tailrec\n\ndef sum2(list: List[Int]): Int = {\n    @tailrec\n    def sumWithAcc(list: List[Int], current: Int): Int = {\n        list match {\n            case Nil => current\n            case x :: xs => sumWithAcc(xs, currentSum + x)\n        }\n    }\n    sumWithAcc(list, 0)\n}\n\nsum2(Range(1,21).toList)", "import scala.annotation.tailrec\n\ndef sum2(list: List[Int]): Int = {\n    @tailrec\n    def sumWithAcc(list: List[Int], current: Int): Int = {\n        list match {\n            case Nil => current\n            case x :: xs => sumWithAcc(xs, currentSum + x)\n        }\n    }\n    sumWithAcc(list, 0)\n}\n\nsum2(Range(1,21).toList)", "import scala.annotation.tailrec\n\ndef sum2(list: List[Int]): Int = {\n    @tailrec\n    def sumWithAcc(list: List[Int], current: Int): Int = {\n        list match {\n            case Nil => current\n            case x :: xs => sumWithAcc(xs, current + x)\n        }\n    }\n    sumWithAcc(list, 0)\n}\n\nsum2(Range(1,21).toList)", "import scala.annotation.tailrec\n\ndef sum2(list: List[Int]): Int = {\n    @tailrec\n    def sumWithAcc(list: List[Int], acc: Int): Int = {\n        list match {\n            case Nil => acc\n            case x :: xs => sumWithAcc(xs, acc + x)\n        }\n    }\n    sumWithAcc(list, 0)\n}\n\nsum2(Range(1,21).toList)"]